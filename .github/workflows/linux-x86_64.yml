name: Release builds
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  MANUAL_MM_VERSION: true
  JEMALLOC_SYS_WITH_MALLOC_CONF: "background_thread:true,narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0,metadata_thp:auto"

jobs:
  linux-x86-64:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: komodoofficial/ci-container:latest
    steps:
      - uses: actions/checkout@v3

      - name: pre scripts for ci container
        run: |
          git config --global --add safe.directory /__w/komodo-defi-framework/komodo-defi-framework
          echo "/bin" >> $GITHUB_PATH
          echo "/usr/bin" >> $GITHUB_PATH
          echo "/root/.cargo/bin" >> $GITHUB_PATH

      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal
          rustup default nightly-2023-06-01

      - name: Install build deps
        uses: ./.github/actions/deps-install
        with:
          deps: ('protoc')

      - name: Calculate commit hash for PR commit
        if: github.event_name == 'pull_request'
        run: echo "COMMIT_HASH=$(git rev-parse --short=7 ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV

      - name: Calculate commit hash for merge commit
        if: github.event_name != 'pull_request'
        run: echo "COMMIT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Cargo cache
        uses: ./.github/actions/cargo-cache

      - name: Build
        run: |
          rm -f ./MM_VERSION
          echo $COMMIT_HASH > ./MM_VERSION
          cargo build --release

      - name: Compress mm2 build output
        run: |
          NAME="mm2_$COMMIT_HASH-linux-x86-64.zip"
          zip $NAME target/release/mm2 -j
          mkdir $BRANCH_NAME
          mv $NAME ./$BRANCH_NAME/

      - name: Compress kdf build output
        run: |
          NAME="kdf_$COMMIT_HASH-linux-x86-64.zip"
          zip $NAME target/release/kdf -j
          mv $NAME ./$BRANCH_NAME/

      - name: Upload build artifact
        env:
          FILE_SERVER_HOST: ${{ secrets.FILE_SERVER_HOST }}
          FILE_SERVER_USERNAME: ${{ secrets.FILE_SERVER_USERNAME }}
          FILE_SERVER_PORT: ${{ secrets.FILE_SERVER_PORT }}
          FILE_SERVER_KEY: ${{ secrets.FILE_SERVER_KEY }}
        if: ${{ env.FILE_SERVER_KEY != '' }}
        run: python3 ./scripts/ci/upload_artifact.py "${{ env.BRANCH_NAME }}" "/uploads/${{ env.BRANCH_NAME }}"

     
      - name: Build Debian packages
        uses: jtdor/build-deb-action@v1.9.0

      - name: build-rpm-action
        uses: jiro4989/build-rpm-action@v2.5.0
